//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DagYig.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Jomolhari, 25.25pt")]
        public global::System.Drawing.Font EngFont {
            get {
                return ((global::System.Drawing.Font)(this["EngFont"]));
            }
            set {
                this["EngFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public float EngFontSize {
            get {
                return ((float)(this["EngFontSize"]));
            }
            set {
                this["EngFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Jomolhari, 25.25pt")]
        public global::System.Drawing.Font TibFont {
            get {
                return ((global::System.Drawing.Font)(this["TibFont"]));
            }
            set {
                this["TibFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("25")]
        public float TibFontSize {
            get {
                return ((float)(this["TibFontSize"]));
            }
            set {
                this["TibFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Jomolhari, 25.25pt")]
        public global::System.Drawing.Font TibColFont {
            get {
                return ((global::System.Drawing.Font)(this["TibColFont"]));
            }
            set {
                this["TibColFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("25")]
        public float TibColFontSize {
            get {
                return ((float)(this["TibColFontSize"]));
            }
            set {
                this["TibColFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Jomolhari, 10.25pt")]
        public global::System.Drawing.Font EngColFont {
            get {
                return ((global::System.Drawing.Font)(this["EngColFont"]));
            }
            set {
                this["EngColFont"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public float EngColFontSize {
            get {
                return ((float)(this["EngColFontSize"]));
            }
            set {
                this["EngColFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("300, 200")]
        public global::System.Drawing.Size ClipBoardWindowSize {
            get {
                return ((global::System.Drawing.Size)(this["ClipBoardWindowSize"]));
            }
            set {
                this["ClipBoardWindowSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("X")]
        public string LoopHotKey {
            get {
                return ((string)(this["LoopHotKey"]));
            }
            set {
                this["LoopHotKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("N")]
        public string UseHotKey {
            get {
                return ((string)(this["UseHotKey"]));
            }
            set {
                this["UseHotKey"] = value;
            }
        }
    }
}
